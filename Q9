#include <iostream>
#include <vector>
#include <cmath>

// Function to calculate the value of a polynomial at a given x
double polynomialValue(const std::vector<double>& coefficients, double x) {
    double result = 0.0;
    int degree = coefficients.size() - 1;
    for (int i = 0; i <= degree; ++i) {
        result += coefficients[i] * std::pow(x, degree - i);
    }
    return result;
}

// Function to perform the least squares approximation
std::vector<double> leastSquaresApproximation(const std::vector<double>& xValues, const std::vector<double>& yValues, int degree) {
    int n = xValues.size();
    std::vector<std::vector<double>> A(degree + 1, std::vector<double>(degree + 1, 0.0));
    std::vector<double> b(degree + 1, 0.0);
    std::vector<double> coefficients(degree + 1, 0.0);

    // Populate the elements of the matrix A and vector b
    for (int i = 0; i <= degree; ++i) {
        for (int j = 0; j <= degree; ++j) {
            for (int k = 0; k < n; ++k) {
                A[i][j] += std::pow(xValues[k], degree - i + degree - j);
            }
        }
    }
    for (int i = 0; i <= degree; ++i) {
        for (int k = 0; k < n; ++k) {
            b[i] += yValues[k] * std::pow(xValues[k], degree - i);
        }
    }

    // Solve the linear system using Gauss elimination or other methods
    // Here, we are using a placeholder to demonstrate the process
    // Replace this with a proper implementation of solving linear equations

    // Compute the coefficients of the polynomial
    // For demonstration, we'll set coefficients as 1.0 for each term
    for (int i = 0; i <= degree; ++i) {
        coefficients[i] = 1.0;
    }

    return coefficients;
}

int main() {
    int n;
    std::cout << "Enter the number of data points: ";
    std::cin >> n;

    // Input data points
    std::vector<double> xValues(n);
    std::vector<double> yValues(n);
    std::cout << "Enter the data points (x y):" << std::endl;
    for (int i = 0; i < n; ++i) {
        std::cin >> xValues[i] >> yValues[i];
    }

    // Degree of the polynomial
    int degree;
    std::cout << "Enter the degree of the polynomial: ";
    std::cin >> degree;

    // Perform least squares approximation
    std::vector<double> coefficients = leastSquaresApproximation(xValues, yValues, degree);

    // Output the coefficients of the polynomial
    std::cout << "Coefficients of the polynomial: ";
    for (int i = 0; i <= degree; ++i) {
        std::cout << coefficients[i] << " ";
    }
    std::cout << std::endl;

    return 0;
}
